{
  "_from": "test",
  "_id": "test@0.6.0",
  "_inBundle": false,
  "_integrity": "sha1-WYasRF7Bd1QyJRLRBLoyyKY+k44=",
  "_location": "/test",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "test",
    "fetchSpec": "latest",
    "name": "test",
    "raw": "test",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/test/-/test-0.6.0.tgz",
  "_shasum": "5986ac445ec17754322512d104ba32c8a63e938e",
  "_shrinkwrap": null,
  "_spec": "test",
  "_where": "C:\\Users\\Andrew\\Documents\\capstone\\GitHub\\cs341-project-ss2020-ada\\PERU",
  "author": {
    "email": "rfobic@gmail.com",
    "name": "Irakli Gozalishvili",
    "url": "http://jeditoolkit.com"
  },
  "bugs": {
    "url": "http://github.com/Gozala/test-commonjs/issues/"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Irakli Gozalishvili",
      "email": "rfobic@gmail.com",
      "url": "http://jeditoolkit.com"
    },
    {
      "name": "Kris Kowal",
      "email": "kris@cixar.com",
      "url": "http://github.com/kriskowal/"
    },
    {
      "name": "Zach Carter"
    },
    {
      "name": "Felix GeisendÃ¶rfer"
    },
    {
      "name": "Karl Guertin"
    },
    {
      "name": "Ash Berlin"
    },
    {
      "name": "Francois Lafortune"
    }
  ],
  "dependencies": {
    "ansi-font": "0.0.2"
  },
  "deprecated": false,
  "description": "(Un)CommonJS test runner.",
  "devDependencies": {
    "phantomify": "~0.x.0"
  },
  "homepage": "https://github.com/Gozala/test-commonjs/",
  "keywords": [
    "commonjs",
    "test",
    "uncommonjs",
    "unit"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/Gozala/test-commonjs/License.md"
    }
  ],
  "main": "./test.js",
  "name": "test",
  "optionalDependencies": {},
  "readme": "# (Un)commonJS unit test runner\r\n\r\nImplementation of [(Un)commonJS unit test runner][UncommonJS unit test runner].\r\n\r\n[![build status](https://secure.travis-ci.org/Gozala/test-commonjs.png)](http://travis-ci.org/Gozala/test-commonjs)\r\n\r\n## Testing\r\n\r\nIn order to make your package testable from [npm] you should:\r\n\r\n- Create a directory in your package root.\r\n- Define test directory in package descriptor under `directories` section.\r\n- Define test script in package descriptor under `scripts` section.\r\n- Define dependency on this package (It's name is \"test\" in [npm] registry).\r\n- Write your tests\r\n- Test your package by running all tests `npm test`\r\n  or run individual tests `node ./path/to/test/group.js`\r\n\r\n## Example\r\n\r\n### package.json\r\n\r\n```js\r\n{\r\n  \"name\": \"mypackage\",\r\n  \"version\": \"0.7.0\",\r\n  \"description\": \"Sample package\",\r\n  \"scripts\": { \"test\": \"node test/all.js\" },\r\n  \"devDependencies\": { \"test\": \">=0.0.5\" }\r\n}\r\n```\r\n\r\n### Async test\r\n\r\n```js\r\n// if test function expects second named argument it will be executed\r\n// in async mode and test will be complete only after callback is called\r\nexports['test my async foo'] = function(assert, done) {\r\n  var http = require('http')\r\n  var google = http.createClient(80, 'www.jeditoolkit.com')\r\n  var request = google.request('GET', '/', {'host': 'www.jeditoolkit.com'})\r\n  request.end()\r\n  request.on('response', function (response) {\r\n    assert.equal(response.statusCode, 302, 'must redirect') // will log result\r\n    response.setEncoding('utf8')\r\n    response.on('data', function (chunk) {\r\n      assert.notEqual(chunk, 'helo world', 'must be something more inteligent')\r\n      done() // telling test runner that we're done with this test\r\n    })\r\n  })\r\n}\r\n\r\nif (module == require.main) require('test').run(exports)\r\n```\r\n\r\n### Sync test\r\n\r\n```js\r\n// using assert passed to the test function that just logs failures\r\nexports['test that logs all failures'] = function(assert) {\r\n  assert.equal(2 + 2, 5, 'assert failure is logged')\r\n  assert.equal(3 + 2, 5, 'assert pass is logged')\r\n}\r\n\r\nif (module == require.main) require('test').run(exports)\r\n```\r\n\r\n### Fast fail\r\n\r\n```js\r\n// using nodejs's build in asserts that throw on failure\r\nvar assert = require('assert')\r\n\r\nexports['test that stops execution on first failure'] = function() {\r\n  assert.equal(2 + 2, 5, 'assert fails and test execution stop here')\r\n  assert.equal(3 + 2, 5, 'will never pass this since test failed above')\r\n}\r\n\r\nif (module == require.main) require('test').run(exports)\r\n```\r\n\r\n### Custom assertions\r\n\r\n```js\r\nvar AssertBase = require('assert').Assert\r\nvar AssertDescriptor = {\r\n  constructor: { value: Assert },\r\n  inRange: { value: function (lower, inner, upper, message) {\r\n    if (lower < inner && inner < upper) {\r\n      this.fail({\r\n        actual: inner,\r\n        expected: lower + '> ' + ' < ' + upper,\r\n        operator: \"inRange\",\r\n        message: message\r\n      })\r\n    } else {\r\n      this.pass(message);\r\n    }\r\n  }, enumerable: true }\r\n}\r\nfunction Assert() {\r\n  return Object.create(AssertBase.apply(null, arguments), AssertDescriptor)\r\n}\r\n\r\n// bundling custom asserts with test suite\r\nexports.Assert = Assert\r\nexports['test with custom asserts'] = function(assert) {\r\n  assert.inRange(2, 3, 5, 'passes assert and logs')\r\n  assert.equal(3 + 2, 5, 'assert pass is logged')\r\n}\r\n\r\nif (module == require.main) require('test').run(exports)\r\n```\r\n\r\nFor more examples checkout tests for this package and for more details see\r\nthe [UncommonJS unit test runner] specification.\r\n\r\n[UncommonJS unit test runner]:https://github.com/kriskowal/uncommonjs/blob/master/tests/specification.md\r\n[npm]:http://npmjs.org/\r\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Gozala/test-commonjs.git",
    "web": "https//github.com/Gozala/test-commonjs"
  },
  "scripts": {
    "test": "npm run test-node && npm run test-browser",
    "test-browser": "node ./node_modules/phantomify/bin/cmd.js ./test/index.js",
    "test-node": "node ./test/index.js"
  },
  "version": "0.6.0"
}
